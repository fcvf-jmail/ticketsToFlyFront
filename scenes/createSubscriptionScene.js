const { Scenes, Markup } = require("telegraf");
const { inlineKeyboard } = require("telegraf/markup");

const cancelButton = {text: "‚ùå –û—Ç–º–µ–Ω–∞", callback_data: "cancel_subscription"}
const backButton = {text: "üîô –ù–∞–∑–∞–¥", callback_data: "back"}

const filterKeyboard = [
    [{ text: "üí∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞", callback_data: "set_max_price" }],
    [{ text: "üì¶ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å –±–∞–≥–∞–∂–∞", callback_data: "set_min_baggage" }],
    [{ text: "üß≥ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å —Ä—É—á–Ω–æ–π –∫–ª–∞–¥–∏", callback_data: "set_min_hand_luggage" }],
    [{ text: "üîÅ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Å–∞–¥–æ–∫", callback_data: "set_transfers" }],
    [{ text: "‚è≥ –í—Ä–µ–º—è –≤ –ø–æ–ª–µ—Ç–µ", callback_data: "set_flight_time" }],
    [{ text: "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data: "finish_subscription" }],
    [cancelButton]
]


// –°—Ü–µ–Ω–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
const createSubscriptionScene = new Scenes.WizardScene(
    "createSubscription",
    async (ctx) => {
        if(ctx?.callbackQuery?.data == "cancel_subscription") return cancelSubscription(ctx)
        await ctx.reply("üåÉ –£–∫–∞–∂–∏ –≥–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞:\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π", {reply_markup: {inline_keyboard: [[cancelButton]], resize_keyboard: true} });
        return ctx.wizard.next();
    },
    async (ctx) => {
        if(ctx?.callbackQuery?.data == "cancel_subscription") return cancelSubscription(ctx)
        await ctx.reply(
            `üõ´ –í–æ—Ç –∫–∞–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:\n\n–í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π:`,
            {
                reply_markup: {
                    resize_keyboard: true,
                    inline_keyboard: [
                        [
                            { text: "–î–æ–º–æ–¥–µ–¥–æ–≤–æ", callback_data: "–î–æ–º–æ–¥–µ–¥–æ–≤–æ" },
                            { text: "–®–µ—Ä–µ–º–µ—Ç—å–µ–≤–æ", callback_data: "–®–µ—Ä–µ–º–µ—Ç—å–µ–≤–æ" },
                        ],
                        [
                            { text: "–í–Ω—É–∫–æ–≤–æ", callback_data: "–í–Ω—É–∫–æ–≤–æ" },
                            { text: "–ñ—É–∫–æ–≤—Å–∫–∏–π", callback_data: "–ñ—É–∫–æ–≤—Å–∫–∏–π" },
                        ],
                        [
                            { text: "–õ—é–±–æ–π üåü", callback_data: "–õ—é–±–æ–π" },
                        ],
                        [cancelButton]
                    ],
                },
            }
        );
        return ctx.wizard.next();
    },
    async (ctx) => {
        if(ctx?.callbackQuery?.data == "cancel_subscription") return cancelSubscription(ctx)
        ctx.scene.state.departureAirport = ctx.callbackQuery.data;
        await ctx.reply("üåá –£–∫–∞–∂–∏ –≥–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è:\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: –ü–∞—Ä–∏–∂, –ë–µ—Ä–ª–∏–Ω, –õ–æ–Ω–¥–æ–Ω, –º–æ–∂–Ω–æ –¥–∞–∂–µ –°–∞—Ä–∞—Ç–æ–≤", {reply_markup: {inline_keyboard: [[cancelButton]], resize_keyboard: true} });
        return ctx.wizard.next();
    },
    async (ctx) => {
        if(ctx?.callbackQuery?.data == "cancel_subscription") return cancelSubscription(ctx)
        ctx.scene.state.arrivalCity = ctx.message.text;
        await ctx.reply("üìÖ –£–∫–∞–∂–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ–∏—Å–∫–∞ –±–∏–ª–µ—Ç–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n`–¥–¥.–º–º.–≥–≥–≥–≥ - –¥–¥.–º–º.–≥–≥–≥–≥`\n\n‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª ‚Äî 7 –¥–Ω–µ–π!", { parse_mode: "HTML", reply_markup: {inline_keyboard: [[cancelButton]], resize_keyboard: true} });
        return ctx.wizard.next();
    },
    async (ctx) => {
        if(ctx?.callbackQuery?.data == "cancel_subscription") return cancelSubscription(ctx)
        if(ctx?.message?.text) ctx.scene.state.dateRange = ctx.message.text;
        await ctx.reply(
            "üéõ –í—ã–±–µ—Ä–∏ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–∏–ª–µ—Ç–æ–≤:\n\n–£–∫–∞–∂–∏ —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è, —á—Ç–æ–±—ã —è –Ω–∞—à–µ–ª –¥–ª—è —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω—ã–π –±–∏–ª–µ—Ç!",
            {
                reply_markup: {
                    inline_keyboard: filterKeyboard,
                    resize_keyboard: true,
                },
            }
        );
        ctx.wizard.next();
        // return ctx.wizard.steps[ctx.wizard.cursor](ctx);
    },
    async (ctx) => {
        if(ctx?.callbackQuery?.data == "back") {
            ctx.wizard.back();
            // –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥ –∑–∞–Ω–æ–≤–æ
            return ctx.wizard.steps[ctx.wizard.cursor](ctx);
        }
        if(ctx?.callbackQuery?.data == "cancel_subscription") return cancelSubscription(ctx)
        const selectedOption = ctx.callbackQuery.data;
        switch (selectedOption) {
            case "set_max_price":
                await ctx.reply("üí∞ –£–∫–∞–∂–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–∏–ª–µ—Ç–∞ –≤ —Ä—É–±–ª—è—Ö:\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: 5000, 10000 –∏–ª–∏ –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π –±—é–¥–∂–µ—Ç", {reply_markup: {inline_keyboard: [[backButton]], resize_keyboard: true}});
                ctx.scene.state.setting = "maxPrice";
                break;
            case "set_min_baggage":
                await ctx.reply(`üì¶ –£–∫–∞–∂–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å –±–∞–≥–∞–∂–∞ (–≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö):\n\n–°–∫–∞–∂—É —Ç–µ–±–µ –ø–æ —Å–µ–∫—Ä–µ—Ç—É, —É –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–µ—Å –±–∞–≥–∞–∂–∞ ‚Äî 20 –∫–∏–ª–æ–≥—Ä–∞–º–º\n\n`, { parse_mode: "HTML", reply_markup: {inline_keyboard: [[backButton]], resize_keyboard: true}});
                ctx.scene.state.setting = "minBaggage";
                break;
            case "set_min_hand_luggage":
                await ctx.reply(
                    `üß≥ –£–∫–∞–∂–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å —Ä—É—á–Ω–æ–π –∫–ª–∞–¥–∏ (–≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö):\n\n–§–∞–Ω —Ñ–∞–∫—Ç: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–µ—Å —Ä—É—á–Ω–æ–π –∫–ª–∞–¥–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 5 –∫–∏–ª–æ–≥—Ä–∞–º`,
                    { parse_mode: "HTML", reply_markup: {inline_keyboard: [[backButton]], resize_keyboard: true}}
                );
                ctx.scene.state.setting = "minHandLuggage";
                break;
            case "set_transfers":
                await ctx.reply(
                    "üîÅ –£–∫–∞–∂–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Å–∞–¥–æ–∫:\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: 0 (–±–µ–∑ –ø–µ—Ä–µ—Å–∞–¥–æ–∫), 1 (–æ–¥–Ω–∞ –ø–µ—Ä–µ—Å–∞–¥–∫–∞) –∏–ª–∏ 2 (–¥–≤–µ –ø–µ—Ä–µ—Å–∞–¥–∫–∏)", {reply_markup: {inline_keyboard: [[backButton]], resize_keyboard: true}}
                );
                ctx.scene.state.setting = "transfers";
                break;
            case "set_flight_time":
                await ctx.reply(
                    "‚è≥ –£–∫–∞–∂–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –≤—Ä–µ–º—è –≤ –ø–æ–ª–µ—Ç–µ (–≤ —á–∞—Å–∞—Ö):\n\n –ù–∞–ø—Ä–∏–º–µ—Ä: 4, 6 –∏–ª–∏ 8 —á–∞—Å–æ–≤", {reply_markup: {inline_keyboard: [[backButton]], resize_keyboard: true}}
                );
                ctx.scene.state.setting = "flightTime";
                break;
            case "finish_subscription":
                var lastChar = ctx.scene.state.filters.flightTime % 10
                var hourWord = ""

                if(lastChar == 1 && ctx.scene.state.filters.flightTime != 11) hourWord = "—á–∞—Å"
                else if(lastChar >= 2 && lastChar <= 4 && ctx.scene.state.filters.flightTime.toString()[0] != "1") hourWord = "—á–∞—Å–∞"
                else if(lastChar >= 5 || ctx.scene.state.filters.flightTime >= 10) hourWord = "—á–∞—Å–æ–≤"

                await ctx.reply(
                    `üéâ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n\nüìÑ –î–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏:\n\n` +
                    `üåÉ –ì–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞: –ú–æ—Å–∫–≤–∞ (${ctx.scene.state.departureAirport == "–õ—é–±–æ–π" ? "–ª—é–±–æ–π –∞—ç—Ä–æ–ø–æ—Ä—Ç" : `–∞—ç—Ä–æ–ø–æ—Ä—Ç ${ctx.scene.state.departureAirport}`})\n` +
                    `üåá –ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è: ${ctx.scene.state.arrivalCity}\n` +
                    `üìÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–∞—Ç: ${ctx.scene.state.dateRange}\n` +
                    `üí∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${ctx.scene.state.filters.maxPrice || "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"} —Ä—É–±\n` +
                    `üéí –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å –±–∞–≥–∞–∂–∞: ${ctx.scene.state.filters.minBaggage} –∫–≥\n` +
                    `üëú –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å —Ä—É—á–Ω–æ–π –∫–ª–∞–¥–∏: ${ctx.scene.state.filters.minHandLuggage} –∫–≥\n` +
                    `üîÑ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Å–∞–¥–æ–∫: ${ctx.scene.state.filters.transfers || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}\n` +
                    `‚è±Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤ –ø–æ–ª–µ—Ç–µ: ${ctx.scene.state.filters.flightTime} ${hourWord}\n\n` +
                    `üöÄ –£–∂–µ –∏—â—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –±–∏–ª–µ—Ç—ã. –û–∂–∏–¥–∞–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!`,
                    { parse_mode: "HTML" }
                );
                return ctx.scene.leave();
        }
        
        return ctx.wizard.next();
    },
    async (ctx) => {
        console.log
        if(ctx?.callbackQuery?.data == "cancel_subscription") return cancelSubscription(ctx)
            if(ctx?.callbackQuery?.data == "back") {
                ctx.wizard.back();
                return ctx.wizard.steps[ctx.wizard.cursor](ctx);
            }
        const setting = ctx.scene.state.setting;
        if(!ctx.scene.state.filters) ctx.scene.state.filters = {}
        ctx.scene.state.filters[setting] = value;
        
        var lastCharTransfer = ctx.scene.state.filters.transfers % 10
        var amountWord = ""
        if(lastCharTransfer == 1 && ctx.scene.state.filters.transfers != 11) amountWord = "–ø–µ—Ä–µ—Å–∞–¥–∫–∏"
        else if(lastCharTransfer >= 2 && lastCharTransfer <= 4 && ctx.scene.state.filters.transfers.toString()[0] != "1") amountWord = "–ø–µ—Ä–µ—Å–∞–¥–æ–∫"
        
        var lastChar = ctx.scene.state.filters.flightTime % 10
        var hourWord = ""

        if(lastChar == 1 && ctx.scene.state.filters.flightTime != 11) hourWord = "—á–∞—Å–∞"
        else if(lastChar >= 2) hourWord = "—á–∞—Å–æ–≤"

        const filterNameToMessageName = {
            maxPrice: `üí∏ –¢—É—Ç —Ç—ã –ø—Ä–∞–≤, –¥–∞–∂–µ —à—É—à–∞—Ä–∞ –≤—Ä—è–¥ –ª–∏ –≥–æ—Ç–æ–≤–∞ –ø–ª–∞—Ç–∏—Ç—å –±–æ–ª—å—à–µ ${value} –∑–∞ –±–∏–ª–µ—Ç`,
            minBaggage: `üéí –°–æ–≥–ª–∞—Å–µ–Ω, –±—Ä–∞—Ç—å —Å —Å–æ–±–æ–π –≤ –ø–æ–ª–µ—Ç –º–µ–Ω—å—à–µ ${value} –∫–≥ –±–∞–≥–∞–∂–∞ –ø—Ä–æ—Å—Ç–æ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ`,
            minHandLuggage: `üëú –ö–∞–∫ –≤–æ–æ–±—â–µ –º–æ–∂–Ω–æ —Å–∏–¥–µ—Ç—å –≤ —Å–∞–º–æ–ª–µ—Ç–µ, –µ—Å–ª–∏ —É —Ç–µ–±—è —Å —Å–æ–±–æ–π –Ω–µ—Ç ${value} –∫–≥ —Ä—É—á–Ω–æ–π –∫–ª–∞–¥–∏?`,
            transfers: `ü™Ω –ú—ã –∂–µ –Ω–∞ —Å–∞–º–æ–ª–µ—Ç–µ –ª–µ—Ç–∏–º, –∞ –Ω–µ –ø–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞–º –≥—É–ª—è–µ–º. –î–µ–ª–∞—Ç—å –±–æ–ª—å—à–µ ${value} ${amountWord} —ç—Ç–æ –ø–æ–ª–Ω—ã–π –±—Ä–µ–¥`,
            flightTime: `‚è±Ô∏è –ß—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å –≤ –ø–æ–ª–µ—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –¥–ª–∏—Ç—Å—è –±–æ–ª—å—à–µ ${value} ${hourWord}? –í –Ω–∞—Ä–¥—ã –∏–≥—Ä–∞—Ç—å? –°–º–æ—Ç—Ä–µ—Ç—å –°–∞–Ω—Ç–∞-–ë–∞—Ä–±–∞—Ä—É?`
        }

        await ctx.reply(`${filterNameToMessageName[setting]}\n\n‚ú® –í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–∏–π —Ñ–∏–ª—å—Ç—Ä –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ–¥–ø–∏—Å–∫–∏`, {reply_markup: {inline_keyboard: filterKeyboard, resize_keyboard: true}});
        return ctx.wizard.back();
    }
);

async function cancelSubscription(ctx) {
    ctx.scene.session.state = {};
    await ctx.reply("‚õîÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ. –î–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /start")
    return await ctx.scene.leave();
}

module.exports = { createSubscriptionScene };
